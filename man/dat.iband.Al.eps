%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/kazuma/dat.iband.Al.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Sun Oct 30 20:30:13 2016
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
490 168 M
63 0 V
6409 0 R
-63 0 V
stroke
406 168 M
[ [(Helvetica) 140.0 0.0 true true 0 (-5)]
] -46.7 MRshow
1.000 UL
LTb
490 756 M
63 0 V
6409 0 R
-63 0 V
stroke
406 756 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
490 1344 M
63 0 V
6409 0 R
-63 0 V
stroke
406 1344 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5)]
] -46.7 MRshow
1.000 UL
LTb
490 1932 M
63 0 V
6409 0 R
-63 0 V
stroke
406 1932 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MRshow
1.000 UL
LTb
490 2520 M
63 0 V
6409 0 R
-63 0 V
stroke
406 2520 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 15)]
] -46.7 MRshow
1.000 UL
LTb
490 3108 M
63 0 V
6409 0 R
-63 0 V
stroke
406 3108 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20)]
] -46.7 MRshow
1.000 UL
LTb
490 3696 M
63 0 V
6409 0 R
-63 0 V
stroke
406 3696 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 25)]
] -46.7 MRshow
1.000 UL
LTb
490 4284 M
63 0 V
6409 0 R
-63 0 V
stroke
406 4284 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 30)]
] -46.7 MRshow
1.000 UL
LTb
490 4872 M
63 0 V
6409 0 R
-63 0 V
stroke
406 4872 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 35)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTb
490 168 M
6472 0 V
0 4704 V
-6472 0 V
490 168 L
1.000 UP
1.000 UL
LT0
490 1163 M
91 -76 V
91 -74 V
92 -68 V
91 -60 V
91 -55 V
91 -54 V
91 -54 V
92 -55 V
91 -50 V
91 -42 V
91 -34 V
91 -30 V
91 -29 V
92 -29 V
91 -26 V
91 -20 V
91 -14 V
91 -8 V
92 -3 V
91 -2 V
105 3 V
105 7 V
106 11 V
105 18 V
105 25 V
106 32 V
105 38 V
105 43 V
106 45 V
105 46 V
105 51 V
105 56 V
106 63 V
105 71 V
105 76 V
106 79 V
105 81 V
105 85 V
106 85 V
105 51 V
52 1 V
53 1 V
53 3 V
52 3 V
53 5 V
53 6 V
52 7 V
53 8 V
53 10 V
52 12 V
53 13 V
53 14 V
52 16 V
53 17 V
53 19 V
52 20 V
53 21 V
53 22 V
52 23 V
53 25 V
74 -21 V
75 -37 V
74 -39 V
75 -40 V
74 -37 V
75 -36 V
74 -34 V
75 -31 V
74 -28 V
74 -26 V
75 -22 V
74 -19 V
75 -16 V
74 -13 V
75 -10 V
74 -8 V
75 -6 V
74 -3 V
75 -2 V
74 -1 V
0 3 V
-74 2 V
-75 4 V
-74 7 V
-75 10 V
-74 13 V
-75 15 V
-74 18 V
-75 20 V
-74 23 V
-75 24 V
-74 26 V
-74 27 V
-75 30 V
-74 31 V
-75 33 V
-74 35 V
-75 35 V
-74 33 V
-75 27 V
-74 13 V
-53 25 V
-52 26 V
-53 22 V
stroke
5315 1665 M
-53 -15 V
-52 -15 V
-53 -16 V
-53 -15 V
-52 -15 V
-53 -14 V
-53 -14 V
-52 -12 V
-53 -12 V
-53 -10 V
-52 -9 V
-53 -7 V
-53 -6 V
-52 -5 V
-53 -3 V
-53 -2 V
-52 -1 V
-105 55 V
-106 97 V
-105 105 V
-105 110 V
-106 118 V
-105 124 V
-105 130 V
-106 134 V
-105 140 V
-105 49 V
-105 50 V
-106 54 V
-105 56 V
-105 57 V
-106 61 V
-105 65 V
-105 70 V
-106 73 V
-105 74 V
-105 42 V
-91 -52 V
-92 -97 V
-91 -110 V
-91 -111 V
-91 -108 V
-91 -105 V
-92 -108 V
-91 -116 V
-91 -121 V
-91 -121 V
-91 -117 V
-91 -112 V
-92 -108 V
-91 -101 V
-91 -96 V
-91 -89 V
-91 -84 V
-92 -80 V
-91 -79 V
-91 -77 V
0 1837 V
91 -12 V
91 -15 V
92 -18 V
91 -19 V
91 -14 V
91 -4 V
91 5 V
92 9 V
91 8 V
91 6 V
91 7 V
91 14 V
91 22 V
92 25 V
91 25 V
91 27 V
91 29 V
91 30 V
92 22 V
91 8 V
105 -38 V
105 -71 V
106 -75 V
105 -73 V
105 -67 V
106 -61 V
105 -57 V
105 -55 V
106 -51 V
105 -48 V
105 -48 V
105 -49 V
106 -37 V
105 -31 V
105 -26 V
106 -25 V
105 -22 V
105 -16 V
106 -11 V
105 -4 V
52 -29 V
53 -46 V
53 -47 V
52 -46 V
53 -44 V
53 -42 V
stroke
4736 2039 M
52 -41 V
53 -39 V
53 -38 V
52 -35 V
53 -35 V
53 -33 V
52 -31 V
53 -31 V
53 -29 V
52 -29 V
53 -28 V
53 9 V
52 10 V
53 4 V
74 23 V
75 45 V
74 54 V
75 59 V
74 63 V
75 68 V
74 71 V
75 74 V
74 76 V
74 78 V
75 78 V
74 76 V
75 71 V
74 72 V
75 72 V
74 71 V
75 72 V
74 69 V
75 65 V
74 53 V
-74 -51 V
-75 -61 V
-74 -65 V
-75 -68 V
-74 -71 V
-75 -74 V
-74 -76 V
-75 -77 V
-74 -74 V
-75 -71 V
-74 -69 V
-74 -68 V
-75 -64 V
-74 -62 V
-75 -57 V
-74 -54 V
-75 -49 V
-74 -42 V
-75 -32 V
-74 -14 V
-53 5 V
-52 14 V
-53 21 V
-53 24 V
-52 27 V
-53 29 V
-53 31 V
-52 33 V
-53 33 V
-53 35 V
-52 35 V
-53 37 V
-53 36 V
-52 37 V
-53 36 V
-53 34 V
-52 31 V
-53 25 V
-53 17 V
-52 6 V
-105 -1 V
-106 -1 V
-105 4 V
-105 10 V
-106 17 V
-105 26 V
-105 32 V
-106 38 V
-105 39 V
-105 62 V
-105 75 V
-106 83 V
-105 83 V
-105 79 V
-106 71 V
-105 61 V
-105 52 V
-106 42 V
-105 27 V
-105 9 V
-91 -8 V
-92 -22 V
-91 -30 V
-91 -29 V
-91 -26 V
-91 -26 V
-92 -25 V
-91 -22 V
-91 -14 V
-91 -7 V
stroke
1402 2949 M
-91 -6 V
-91 -8 V
-92 -9 V
-91 -4 V
-91 4 V
-91 13 V
-91 19 V
-92 18 V
-91 16 V
-91 11 V
0 11 V
91 18 V
91 30 V
92 35 V
91 36 V
91 35 V
91 35 V
91 40 V
92 49 V
91 59 V
91 60 V
91 49 V
91 37 V
91 26 V
92 1 V
91 -26 V
91 -41 V
91 -52 V
91 -49 V
92 -34 V
91 -12 V
105 -4 V
105 -14 V
106 -22 V
105 -32 V
105 -42 V
106 -54 V
105 -77 V
105 -116 V
106 -144 V
105 -151 V
105 -137 V
105 -38 V
106 -30 V
105 -30 V
105 -28 V
106 -24 V
105 -14 V
105 -4 V
106 1 V
105 1 V
52 31 V
53 49 V
53 52 V
52 54 V
53 54 V
53 56 V
52 55 V
53 57 V
53 57 V
52 58 V
53 59 V
53 60 V
52 61 V
53 62 V
53 63 V
52 65 V
53 66 V
53 68 V
52 69 V
53 70 V
74 -31 V
75 -37 V
74 -34 V
75 -29 V
74 -24 V
75 -19 V
74 -15 V
75 -12 V
74 -10 V
74 -22 V
75 -24 V
74 -24 V
75 -23 V
74 -22 V
75 -22 V
74 -23 V
75 -24 V
74 -28 V
75 -37 V
74 -43 V
0 1 V
-74 46 V
-75 47 V
-74 41 V
-75 36 V
-74 30 V
-75 25 V
-74 19 V
-75 16 V
-74 12 V
-75 10 V
-74 11 V
-74 26 V
stroke
6069 3334 M
-75 27 V
-74 27 V
-75 28 V
-74 28 V
-75 27 V
-74 23 V
-75 17 V
-74 6 V
-53 22 V
-52 -39 V
-53 -49 V
-53 -52 V
-52 -54 V
-53 -53 V
-53 -53 V
-52 -52 V
-53 -51 V
-53 -50 V
-52 -49 V
-53 -47 V
-53 -47 V
-52 -44 V
-53 -42 V
-53 -39 V
-52 -35 V
-53 -28 V
-53 -18 V
-52 -7 V
-105 2 V
-106 5 V
-105 11 V
-105 18 V
-106 22 V
-105 25 V
-105 27 V
-106 32 V
-105 41 V
-105 51 V
-105 60 V
-106 73 V
-105 96 V
-105 122 V
-106 132 V
-105 135 V
-105 -52 V
-106 -95 V
-105 -83 V
-105 -42 V
-91 12 V
-92 34 V
-91 50 V
-91 51 V
-91 41 V
-91 26 V
-92 -1 V
-91 -26 V
-91 -37 V
-91 -49 V
-91 -60 V
-91 -59 V
-92 -49 V
-91 -39 V
-91 -36 V
-91 -35 V
-91 -36 V
-92 -35 V
-91 -30 V
-91 -17 V
0 411 V
91 1 V
91 3 V
92 5 V
91 6 V
91 6 V
91 6 V
91 7 V
92 6 V
91 10 V
91 14 V
91 18 V
91 17 V
91 11 V
92 4 V
91 -6 V
91 -17 V
91 -36 V
91 -57 V
92 -70 V
91 -44 V
105 48 V
105 89 V
106 95 V
105 86 V
105 96 V
106 93 V
105 88 V
105 90 V
106 95 V
105 80 V
105 57 V
105 67 V
106 70 V
105 64 V
105 54 V
stroke
3893 4482 M
106 43 V
105 33 V
105 25 V
106 17 V
105 5 V
52 -3 V
53 -9 V
53 -16 V
52 -21 V
53 -27 V
53 -32 V
52 -36 V
53 -41 V
53 -69 V
52 -77 V
53 -78 V
53 -78 V
52 -78 V
53 -78 V
53 -77 V
52 -76 V
53 -75 V
53 -74 V
52 -72 V
53 -32 V
74 34 V
75 49 V
74 52 V
75 54 V
74 56 V
75 56 V
74 58 V
75 58 V
74 59 V
74 -8 V
75 -54 V
74 -67 V
75 -74 V
74 -75 V
75 -76 V
74 -73 V
75 -68 V
74 -58 V
75 -39 V
74 -14 V
0 1086 V
-74 -6 V
-75 -17 V
-74 -28 V
-75 -38 V
-74 -45 V
-75 -52 V
-74 -56 V
-75 -58 V
-74 -60 V
-75 -60 V
-74 -40 V
-74 -3 V
-75 -26 V
-74 -37 V
-75 -42 V
-74 -41 V
-75 -38 V
-74 -32 V
-75 -22 V
-74 -9 V
-53 17 V
-52 43 V
-53 56 V
-53 60 V
-52 62 V
-53 62 V
-53 60 V
-52 59 V
-53 55 V
-53 52 V
-52 48 V
-53 49 V
-53 69 V
-52 65 V
-53 58 V
-53 50 V
-52 40 V
-53 28 V
-53 14 V
-52 3 V
-105 -1 V
-106 -7 V
-105 -17 V
-105 -46 V
-106 -61 V
-105 -72 V
-105 -78 V
-106 -82 V
-105 -94 V
3367 4191 L
-105 -84 V
-106 -99 V
-105 -96 V
-105 -94 V
-106 -90 V
-105 -91 V
-105 77 V
-106 118 V
stroke
2524 3832 M
-105 85 V
-105 30 V
-91 -15 V
-92 -39 V
-91 -46 V
-91 -48 V
-91 -51 V
-91 -44 V
-92 -5 V
-91 47 V
-91 73 V
-91 75 V
-91 64 V
-91 61 V
-92 74 V
-91 94 V
-91 101 V
-91 87 V
-91 63 V
-92 41 V
-91 24 V
-91 9 V
91 -8 V
91 -25 V
92 -41 V
91 -63 V
91 -87 V
91 -101 V
91 -94 V
92 -74 V
91 -61 V
91 -64 V
91 -75 V
91 -73 V
91 -47 V
92 5 V
91 44 V
91 52 V
91 48 V
91 46 V
92 38 V
91 15 V
105 1 V
105 3 V
106 9 V
105 19 V
105 26 V
106 30 V
105 29 V
105 29 V
106 33 V
105 79 V
105 95 V
105 96 V
106 97 V
105 86 V
105 68 V
106 50 V
105 32 V
105 25 V
106 14 V
105 3 V
52 -3 V
53 -2 V
53 0 V
52 2 V
53 4 V
53 4 V
52 4 V
53 5 V
53 5 V
52 5 V
53 4 V
53 4 V
52 2 V
53 2 V
53 2 V
52 0 V
53 1 V
53 0 V
52 0 V
53 0 V
74 -10 V
75 -26 V
74 -41 V
75 -54 V
74 -63 V
75 -70 V
74 -70 V
75 -61 V
74 -40 V
74 -11 V
75 14 V
74 23 V
75 26 V
74 24 V
75 20 V
74 16 V
75 11 V
74 8 V
75 4 V
74 2 V
1.000 UL
LTb
490 168 M
6472 0 V
0 4704 V
-6472 0 V
490 168 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
